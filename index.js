(()=>{"use strict";function t(t){return t*Math.PI/180}class e{static projection(t,e,o){return[2/t,0,0,0,0,-2/e,0,0,0,0,2/o,0,-1,1,0,1]}static perspective(t,e,o,i){const n=Math.tan(.5*Math.PI-.5*t),r=1/(o-i);return[n/e,0,0,0,0,n,0,0,0,0,(o+i)*r,-1,0,0,o*i*r*2,0]}static multiply(t,e){const o=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],c=t[6],l=t[7],h=t[8],x=t[9],u=t[10],d=t[11],v=t[12],y=t[13],z=t[14],g=t[15],p=e[0],m=e[1],P=e[2],f=e[3],R=e[4],S=e[5],b=e[6],C=e[7],A=e[8],_=e[9],E=e[10],T=e[11],w=e[12],L=e[13],O=e[14],F=e[15];return[p*o+m*s+P*h+f*v,p*i+m*a+P*x+f*y,p*n+m*c+P*u+f*z,p*r+m*l+P*d+f*g,R*o+S*s+b*h+C*v,R*i+S*a+b*x+C*y,R*n+S*c+b*u+C*z,R*r+S*l+b*d+C*g,A*o+_*s+E*h+T*v,A*i+_*a+E*x+T*y,A*n+_*c+E*u+T*z,A*r+_*l+E*d+T*g,w*o+L*s+O*h+F*v,w*i+L*a+O*x+F*y,w*n+L*c+O*u+F*z,w*r+L*l+O*d+F*g]}static inverse(t){const e=t[0],o=t[1],i=t[2],n=t[3],r=t[4],s=t[5],a=t[6],c=t[7],l=t[8],h=t[9],x=t[10],u=t[11],d=t[12],v=t[13],y=t[14],z=t[15],g=x*z,p=y*u,m=a*z,P=y*c,f=a*u,R=x*c,S=i*z,b=y*n,C=i*u,A=x*n,_=i*c,E=a*n,T=l*v,w=d*h,L=r*v,O=d*s,F=r*h,M=l*s,D=e*v,I=d*o,j=e*h,B=l*o,U=e*s,k=r*o,Q=g*s+P*h+f*v-(p*s+m*h+R*v),$=p*o+S*h+A*v-(g*o+b*h+C*v),H=m*o+b*s+_*v-(P*o+S*s+E*v),N=R*o+C*s+E*h-(f*o+A*s+_*h),G=1/(e*Q+r*$+l*H+d*N);return[G*Q,G*$,G*H,G*N,G*(p*r+m*l+R*d-(g*r+P*l+f*d)),G*(g*e+b*l+C*d-(p*e+S*l+A*d)),G*(P*e+S*r+E*d-(m*e+b*r+_*d)),G*(f*e+A*r+_*l-(R*e+C*r+E*l)),G*(T*c+O*u+F*z-(w*c+L*u+M*z)),G*(w*n+D*u+B*z-(T*n+I*u+j*z)),G*(L*n+I*c+U*z-(O*n+D*c+k*z)),G*(M*n+j*c+k*u-(F*n+B*c+U*u)),G*(L*x+M*y+w*a-(F*y+T*a+O*x)),G*(j*y+T*i+I*x-(D*x+B*y+w*i)),G*(D*a+k*y+O*i-(U*y+L*i+I*a)),G*(U*x+F*i+B*a-(j*a+k*x+M*i))]}static translation(t,e,o){return[1,0,0,0,0,1,0,0,0,0,1,0,t,e,o,1]}static xRotation(t){const e=Math.cos(t),o=Math.sin(t);return[1,0,0,0,0,e,o,0,0,-o,e,0,0,0,0,1]}static yRotation(t){const e=Math.cos(t),o=Math.sin(t);return[e,0,-o,0,0,1,0,0,o,0,e,0,0,0,0,1]}static zRotation(t){const e=Math.cos(t),o=Math.sin(t);return[e,o,0,0,-o,e,0,0,0,0,1,0,0,0,0,1]}static scaling(t,e,o){return[t,0,0,0,0,e,0,0,0,0,o,0,0,0,0,1]}static translate(t,o,i,n){return e.multiply(t,e.translation(o,i,n))}static xRotate(t,o){return e.multiply(t,e.xRotation(o))}static yRotate(t,o){return e.multiply(t,e.yRotation(o))}static zRotate(t,o){return e.multiply(t,e.zRotation(o))}static scale(t,o,i,n){return e.multiply(t,e.scaling(o,i,n))}static transformVector(t,e){let o=[];for(let i=0;i<4;++i){o[i]=0;for(let n=0;n<4;++n)o[i]+=e[n]*t[4*n+i]}return o}}const o=e,i=class{constructor(t,e){this.options={width:500,height:500,backgroundColor:[0,0,0,1]},this.$canvas=t,this.context=this.$canvas.getContext("webgl2"),this.options=Object.assign(Object.assign({},this.options),e),this.resizeCanvas(),this.clearCanvas()}renderTriangles(t,e,o,i){const{attributesData:n,verticesCount:r}=t,s=this.createProgram(this.createShader(WebGL2RenderingContext.VERTEX_SHADER,e),this.createShader(WebGL2RenderingContext.FRAGMENT_SHADER,o));this.context.useProgram(s);const a=this.context.getUniformLocation(s,"u_matrix");this.context.uniformMatrix4fv(a,!1,i),Object.keys(n).map((t=>{this.createBuffer(n[t].vertices);const e=this.context.getAttribLocation(s,t);this.context.vertexAttribPointer(e,n[t].vertexSize,this.context.FLOAT,!1,0,0),this.context.enableVertexAttribArray(e)})),this.context.drawArrays(this.context.TRIANGLES,0,r)}resizeCanvas(){const{width:t,height:e}=this.options;this.$canvas.width=t,this.$canvas.height=e,this.context.viewport(0,0,t,e)}clearCanvas(){this.context.clearColor(...this.options.backgroundColor),this.context.clearDepth(1),this.context.enable(this.context.DEPTH_TEST),this.context.depthFunc(this.context.LEQUAL),this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT)}createShader(t,e){const o=this.context.createShader(t);return this.context.shaderSource(o,e),this.context.compileShader(o),this.context.getShaderParameter(o,this.context.COMPILE_STATUS)?o:(console.log(this.context.getShaderInfoLog(o)),this.context.deleteShader(o),null)}createProgram(t,e){const o=this.context.createProgram();return this.context.attachShader(o,t),this.context.attachShader(o,e),this.context.linkProgram(o),this.context.getProgramParameter(o,this.context.LINK_STATUS)?o:(console.log(this.context.getProgramInfoLog(o)),this.context.deleteProgram(o),null)}createBuffer(t){const e=this.context.createBuffer();return this.context.bindBuffer(this.context.ARRAY_BUFFER,e),this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array(t),this.context.STATIC_DRAW),e}};class n{}n.vertexShader="#version 300 es\nin vec4 a_position;\nin vec4 a_color;\n\nuniform mat4 u_matrix;\n\nout vec4 vertex_Color;\n\nvoid main() {\n  gl_Position = u_matrix * a_position;\n\n  vertex_Color = a_color;\n}\n  ",n.fragmentShader="#version 300 es\n  precision highp float;\n\n  in vec4 vertex_Color;\n  \n  out vec4 outColor;\n \n  void main() {\n    outColor = vertex_Color;\n  }\n";const r=n;function s(t){const e=o.translate(o.xRotation(Math.PI),-50,-75,-15);for(var i=0;i<t.length;i+=3){var n=o.transformVector(e,[t[i+0],t[i+1],t[i+2],1]);t[i+0]=n[0],t[i+1]=n[1],t[i+2]=n[2]}return t}function a(t,e){const[o,i]=t.reduce(((t,e)=>[[...t[0],...e.verticesPositions[0],...e.verticesPositions[1],...e.verticesPositions[2]],[...t[1],...e.color,...e.color,...e.color]]),[[],[]]);return{attributesData:{a_color:{vertices:i,vertexSize:4},a_position:{vertices:s(o),vertexSize:e}},verticesCount:o.length/e,position:t[0].position,rotation:t[0].rotation}}function c(t,e){const o=[[0,0,0],[0,100,0],[100,100,0],[100,0,0]];return a(t.reduce(((t,e)=>[...t,Object.assign(Object.assign({},e),{verticesPositions:(e.verticesPositions||o).slice(0,3)}),Object.assign(Object.assign({},e),{verticesPositions:[(e.verticesPositions||o)[0],...(e.verticesPositions||o).slice(2,4)]})]),[]),e)}function l(t,e){const{position:o,colors:i,rotation:n,size:r}=t,s=[[0,0,0],[0,r.y,0],[r.x,r.y,0],[r.x,0,0],[0,0,r.z],[0,r.y,r.z],[r.x,r.y,r.z],[r.x,0,r.z]];return[{position:[o[0],o[1],o[2]],verticesPositions:[s[0],s[3],s[7],s[4]],rotation:n,color:i[0]},{position:[o[0],o[1],o[2]],verticesPositions:[s[0],s[1],s[5],s[4]],rotation:n,color:i[1]},{position:[o[0],o[1],o[2]],verticesPositions:s.slice(0,4),rotation:n,color:i[2]},{position:[o[0],o[1],o[2]],verticesPositions:[s[3],s[2],s[6],s[7]],rotation:{x:n.x,y:n.y,z:n.z},color:i[3]},{position:[o[0],o[1],o[2]],verticesPositions:[s[1],s[2],s[6],s[5]],rotation:n,color:i[4]},{position:[o[0],o[1],o[2]],verticesPositions:s.slice(4,8),rotation:n,color:i[5]}].map((t=>c([t],e)))}const h={"2d":{Triangle:a,Quadrilateral:c},"3d":{Hexahedron:l,Cube:function(t,e){const{size:o}=t;return l(Object.assign(Object.assign({},t),{size:{x:o,y:o,z:o}}),e)}},render(e,i,n,r,s){const a=i=>{var a,c,l;e.renderTriangles(i,n,r,(a=s,c=i.position,l=i.rotation,a=o.translate(a,c[0],c[1],c[2]),a=o.xRotate(a,t(l.y)),a=o.yRotate(a,t(l.x)),o.zRotate(a,t(l.z))))};Array.isArray(i)?i.map(a):a(i)}};class x{constructor(t){this.$container=document.querySelector(`#${t}`)}render(){this.$container.innerHTML='\n  <h1>Rubik\'s Cube</h1>\n  \n  <canvas id="scene" />\n    '}}const u={width:800,height:600,pixelSize:100,backgroundColor:[.5,.5,.5,1]},d={radius:400,aspect:u.width/u.height,zNear:1,zFar:2e3,fieldOfView:t(120),angle:t(0)},v={WHITE:[1,1,1,1],GREEN:[0,1,0,1],RED:[1,0,0,1],ORANGE:[1,.5,0,1],YELLOW:[1,1,0,1],BLUE:[0,.5,1,1]};window.addEventListener("DOMContentLoaded",(()=>{const t=new x("app-container");t.render();const e=t.$container.querySelector("#scene"),n=new i(e,{width:u.width,height:u.height,backgroundColor:u.backgroundColor}),s=o.perspective(d.fieldOfView,d.aspect,d.zNear,d.zFar),a=o.inverse(o.translate(o.yRotation(d.angle),u.pixelSize/2,-u.pixelSize/2,1.5*d.radius)),c=o.multiply(s,a);let l=function(t,e,o,i){const n=10,r=3*t+40;return[(s,a)=>{const c={z:r-n-s*(t+n),y:-10,x:a*(t+n)+n};return h["2d"].Quadrilateral([{position:e,verticesPositions:[[c.x,c.y,c.z],[c.x,c.y,c.z-t],[c.x+t,c.y,c.z-t],[c.x+t,c.y,c.z]],rotation:o,color:i[0]}],3)},(s,a)=>{const c={x:0,y:a*(t+n),z:r-n-s*(t+n)};return h["2d"].Quadrilateral([{position:e,verticesPositions:[[c.x,c.y,c.z],[c.x,c.y,c.z-t],[c.x,c.y+t,c.z-t],[c.x,c.y+t,c.z]],rotation:o,color:i[1]}],3)},(s,a)=>{const c={z:0,y:a*(t+n),x:r-n-s*(t+n)+n};return h["2d"].Quadrilateral([{position:e,verticesPositions:[[c.x,c.y,c.z],[c.x-t,c.y,c.z],[c.x-t,c.y+t,c.z],[c.x,c.y+t,c.z]],rotation:o,color:i[2]}],3)},(s,a)=>{const c={x:r+n,y:a*(t+n),z:r-n-s*(t+n)};return h["2d"].Quadrilateral([{position:e,verticesPositions:[[c.x,c.y,c.z],[c.x,c.y,c.z-t],[c.x,c.y+t,c.z-t],[c.x,c.y+t,c.z]],rotation:o,color:i[3]}],3)},(s,a)=>{const c={x:a*(t+n)+n,y:r-n,z:r-n-s*(t+n)};return h["2d"].Quadrilateral([{position:e,verticesPositions:[[c.x,c.y,c.z],[c.x,c.y,c.z-t],[c.x+t,c.y,c.z-t],[c.x+t,c.y,c.z]],rotation:o,color:i[4]}],3)},(s,a)=>{const c={z:r,y:a*(t+n),x:r-n-s*(t+n)+n};return h["2d"].Quadrilateral([{position:e,verticesPositions:[[c.x,c.y,c.z],[c.x-t,c.y,c.z],[c.x-t,c.y+t,c.z],[c.x,c.y+t,c.z]],rotation:o,color:i[5]}],3)}].reduce(((t,e)=>[...t,...Array(9).fill(0).map(((t,o)=>e(o%3,Math.floor(o/3))))]),[])}(u.pixelSize,[0,0,0],{x:0,y:0,z:0},Object.values(v));const y=Date.now();let z=0,g=y;const p=()=>{const t=Date.now();z>0&&t>g+100&&t<g+200&&(g=t,l[0].rotation.x++,l[0].rotation.y--,l[0].rotation.z++,n.clearCanvas(),h.render(n,l,r.vertexShader,r.fragmentShader,c)),z=requestAnimationFrame(p)};requestAnimationFrame(p)}))})();