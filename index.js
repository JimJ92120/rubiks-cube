(()=>{"use strict";function t(t){return t*Math.PI/180}class e{static projection(t,e,o){return[2/t,0,0,0,0,-2/e,0,0,0,0,2/o,0,-1,1,0,1]}static perspective(t,e,o,i){const r=Math.tan(.5*Math.PI-.5*t),n=1/(o-i);return[r/e,0,0,0,0,r,0,0,0,0,(o+i)*n,-1,0,0,o*i*n*2,0]}static multiply(t,e){const o=t[0],i=t[1],r=t[2],n=t[3],s=t[4],a=t[5],c=t[6],l=t[7],h=t[8],x=t[9],u=t[10],d=t[11],y=t[12],v=t[13],p=t[14],z=t[15],g=e[0],f=e[1],m=e[2],P=e[3],R=e[4],S=e[5],A=e[6],E=e[7],b=e[8],C=e[9],_=e[10],L=e[11],T=e[12],M=e[13],O=e[14],w=e[15];return[g*o+f*s+m*h+P*y,g*i+f*a+m*x+P*v,g*r+f*c+m*u+P*p,g*n+f*l+m*d+P*z,R*o+S*s+A*h+E*y,R*i+S*a+A*x+E*v,R*r+S*c+A*u+E*p,R*n+S*l+A*d+E*z,b*o+C*s+_*h+L*y,b*i+C*a+_*x+L*v,b*r+C*c+_*u+L*p,b*n+C*l+_*d+L*z,T*o+M*s+O*h+w*y,T*i+M*a+O*x+w*v,T*r+M*c+O*u+w*p,T*n+M*l+O*d+w*z]}static inverse(t){const e=t[0],o=t[1],i=t[2],r=t[3],n=t[4],s=t[5],a=t[6],c=t[7],l=t[8],h=t[9],x=t[10],u=t[11],d=t[12],y=t[13],v=t[14],p=t[15],z=x*p,g=v*u,f=a*p,m=v*c,P=a*u,R=x*c,S=i*p,A=v*r,E=i*u,b=x*r,C=i*c,_=a*r,L=l*y,T=d*h,M=n*y,O=d*s,w=n*h,F=l*s,D=e*y,I=d*o,B=e*h,j=l*o,U=e*s,N=n*o,k=z*s+m*h+P*y-(g*s+f*h+R*y),G=g*o+S*h+b*y-(z*o+A*h+E*y),H=f*o+A*s+C*y-(m*o+S*s+_*y),Q=R*o+E*s+_*h-(P*o+b*s+C*h),$=1/(e*k+n*G+l*H+d*Q);return[$*k,$*G,$*H,$*Q,$*(g*n+f*l+R*d-(z*n+m*l+P*d)),$*(z*e+A*l+E*d-(g*e+S*l+b*d)),$*(m*e+S*n+_*d-(f*e+A*n+C*d)),$*(P*e+b*n+C*l-(R*e+E*n+_*l)),$*(L*c+O*u+w*p-(T*c+M*u+F*p)),$*(T*r+D*u+j*p-(L*r+I*u+B*p)),$*(M*r+I*c+U*p-(O*r+D*c+N*p)),$*(F*r+B*c+N*u-(w*r+j*c+U*u)),$*(M*x+F*v+T*a-(w*v+L*a+O*x)),$*(B*v+L*i+I*x-(D*x+j*v+T*i)),$*(D*a+N*v+O*i-(U*v+M*i+I*a)),$*(U*x+w*i+j*a-(B*a+N*x+F*i))]}static translation(t,e,o){return[1,0,0,0,0,1,0,0,0,0,1,0,t,e,o,1]}static xRotation(t){const e=Math.cos(t),o=Math.sin(t);return[1,0,0,0,0,e,o,0,0,-o,e,0,0,0,0,1]}static yRotation(t){const e=Math.cos(t),o=Math.sin(t);return[e,0,-o,0,0,1,0,0,o,0,e,0,0,0,0,1]}static zRotation(t){const e=Math.cos(t),o=Math.sin(t);return[e,o,0,0,-o,e,0,0,0,0,1,0,0,0,0,1]}static scaling(t,e,o){return[t,0,0,0,0,e,0,0,0,0,o,0,0,0,0,1]}static translate(t,o,i,r){return e.multiply(t,e.translation(o,i,r))}static xRotate(t,o){return e.multiply(t,e.xRotation(o))}static yRotate(t,o){return e.multiply(t,e.yRotation(o))}static zRotate(t,o){return e.multiply(t,e.zRotation(o))}static scale(t,o,i,r){return e.multiply(t,e.scaling(o,i,r))}static transformVector(t,e){let o=[];for(let i=0;i<4;++i){o[i]=0;for(let r=0;r<4;++r)o[i]+=e[r]*t[4*r+i]}return o}}const o=e,i=class{constructor(t,e){this.options={width:500,height:500,backgroundColor:[0,0,0,1]},this.$canvas=t,this.context=this.$canvas.getContext("webgl2"),this.options=Object.assign(Object.assign({},this.options),e),this.resizeCanvas(),this.clearCanvas()}renderTriangles(t,e,o,i){const{attributesData:r,verticesCount:n}=t,s=this.createProgram(this.createShader(WebGL2RenderingContext.VERTEX_SHADER,e),this.createShader(WebGL2RenderingContext.FRAGMENT_SHADER,o));this.context.useProgram(s);const a=this.context.getUniformLocation(s,"u_matrix");this.context.uniformMatrix4fv(a,!1,i),Object.keys(r).map((t=>{this.createBuffer(r[t].vertices);const e=this.context.getAttribLocation(s,t);this.context.vertexAttribPointer(e,r[t].vertexSize,this.context.FLOAT,!1,0,0),this.context.enableVertexAttribArray(e)})),this.context.drawArrays(this.context.TRIANGLES,0,n)}resizeCanvas(){const{width:t,height:e}=this.options;this.$canvas.width=t,this.$canvas.height=e,this.context.viewport(0,0,t,e)}clearCanvas(){this.context.clearColor(...this.options.backgroundColor),this.context.clearDepth(1),this.context.enable(this.context.DEPTH_TEST),this.context.depthFunc(this.context.LEQUAL),this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT)}createShader(t,e){const o=this.context.createShader(t);return this.context.shaderSource(o,e),this.context.compileShader(o),this.context.getShaderParameter(o,this.context.COMPILE_STATUS)?o:(console.log(this.context.getShaderInfoLog(o)),this.context.deleteShader(o),null)}createProgram(t,e){const o=this.context.createProgram();return this.context.attachShader(o,t),this.context.attachShader(o,e),this.context.linkProgram(o),this.context.getProgramParameter(o,this.context.LINK_STATUS)?o:(console.log(this.context.getProgramInfoLog(o)),this.context.deleteProgram(o),null)}createBuffer(t){const e=this.context.createBuffer();return this.context.bindBuffer(this.context.ARRAY_BUFFER,e),this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array(t),this.context.STATIC_DRAW),e}};class r{constructor(t){this.$container=document.querySelector(`#${t}`)}render(){this.$container.innerHTML='\n  <h1>Rubik\'s Cube</h1>\n  \n  <canvas id="scene" />\n    '}}class n{}n.vertexShader="#version 300 es\nin vec4 a_position;\nin vec4 a_color;\n\nuniform mat4 u_matrix;\n\nout vec4 vertex_Color;\n\nvoid main() {\n  gl_Position = u_matrix * a_position;\n\n  vertex_Color = a_color;\n}\n  ",n.fragmentShader="#version 300 es\n  precision highp float;\n\n  in vec4 vertex_Color;\n  \n  out vec4 outColor;\n \n  void main() {\n    outColor = vertex_Color;\n  }\n";const s=n;function a(t){const e=o.translate(o.xRotation(Math.PI),-50,-75,-15);for(var i=0;i<t.length;i+=3){var r=o.transformVector(e,[t[i+0],t[i+1],t[i+2],1]);t[i+0]=r[0],t[i+1]=r[1],t[i+2]=r[2]}return t}function c(t,e){const[o,i]=t.reduce(((t,e)=>[[...t[0],...e.verticesPositions[0],...e.verticesPositions[1],...e.verticesPositions[2]],[...t[1],...e.color,...e.color,...e.color]]),[[],[]]);return{attributesData:{a_color:{vertices:i,vertexSize:4},a_position:{vertices:a(o),vertexSize:e}},verticesCount:o.length*e,position:t[0].position,rotation:t[0].rotation}}function l(t,e){const o=[[0,0,0],[0,100,0],[100,100,0],[100,0,0]];return c(t.reduce(((t,e)=>[...t,Object.assign(Object.assign({},e),{verticesPositions:(e.verticesPositions||o).slice(0,3)}),Object.assign(Object.assign({},e),{verticesPositions:[(e.verticesPositions||o)[0],...(e.verticesPositions||o).slice(2,4)]})]),[]),e)}function h(t,e){const{position:o,colors:i,rotation:r,size:n}=t,s=[[0,0,0],[0,n.y,0],[n.x,n.y,0],[n.x,0,0],[0,0,n.z],[0,n.y,n.z],[n.x,n.y,n.z],[n.x,0,n.z]];return[{position:[o[0],o[1],o[2]],verticesPositions:[s[0],s[3],s[7],s[4]],rotation:r,color:i[0]},{position:[o[0],o[1],o[2]],verticesPositions:[s[0],s[1],s[5],s[4]],rotation:r,color:i[1]},{position:[o[0],o[1],o[2]],verticesPositions:s.slice(0,4),rotation:r,color:i[2]},{position:[o[0],o[1],o[2]],verticesPositions:[s[3],s[2],s[6],s[7]],rotation:{x:r.x,y:r.y,z:r.z},color:i[3]},{position:[o[0],o[1],o[2]],verticesPositions:[s[1],s[2],s[6],s[5]],rotation:r,color:i[4]},{position:[o[0],o[1],o[2]],verticesPositions:s.slice(4,8),rotation:r,color:i[5]}].map((t=>l([t],e)))}const x={"2d":{Triangle:c,Quadrilateral:l},"3d":{Hexahedron:h,Cube:function(t,e){const{size:o}=t;return h(Object.assign(Object.assign({},t),{size:{x:o,y:o,z:o}}),e)}},render(e,i,r,n,s){const a=i=>{var a,c,l;e.renderTriangles(i,r,n,(a=s,c=i.position,l=i.rotation,a=o.translate(a,c[0],c[1],c[2]),a=o.xRotate(a,t(l.y)),a=o.yRotate(a,t(l.x)),o.zRotate(a,t(l.z))))};Array.isArray(i)?i.map(a):a(i)}},u={WHITE:[1,1,1,1],GREEN:[0,1,0,1],RED:[1,0,0,1],ORANGE:[1,.5,0,1],YELLOW:[1,1,0,1],BLUE:[0,.5,1,1]},d={width:800,height:600,pixelSize:100,backgroundColor:[.5,.5,.5,1]},y={radius:400,aspect:d.width/d.height,zNear:1,zFar:2e3,fieldOfView:t(120),angle:t(0)};window.addEventListener("DOMContentLoaded",(()=>{const t=new r("app-container");t.render();const e=t.$container.querySelector("#scene"),n=new i(e,{width:d.width,height:d.height,backgroundColor:d.backgroundColor}),a=o.perspective(y.fieldOfView,y.aspect,y.zNear,y.zFar),c=o.inverse(o.translate(o.yRotation(y.angle),d.pixelSize/2,-d.pixelSize/2,1.5*y.radius)),l=o.multiply(a,c),h=[0,0,0];let v={x:10,y:0,z:0};const p=Date.now();let z=0,g=p;const f=()=>{const t=Date.now();z>0&&t>g+100&&t<g+200&&(g=t,v.x++,v.y--,v.z++,function(t,e,o,i,r){t.clearCanvas();const n=10,a=3*o+40,c=Array(9).fill(0).map(((t,e)=>{const s=e%3,c={z:0,y:Math.floor(e/3)*(o+n),x:a-n-s*(o+n)+n};return x["2d"].Quadrilateral([{position:i,verticesPositions:[[c.x,c.y,c.z],[c.x-o,c.y,c.z],[c.x-o,c.y+o,c.z],[c.x,c.y+o,c.z]],rotation:r,color:u.RED}],3)})),l=Array(9).fill(0).map(((t,e)=>{const s=e%3,c={x:0,y:Math.floor(e/3)*(o+n),z:a-n-s*(o+n)};return x["2d"].Quadrilateral([{position:i,verticesPositions:[[c.x,c.y,c.z],[c.x,c.y,c.z-o],[c.x,c.y+o,c.z-o],[c.x,c.y+o,c.z]],rotation:r,color:u.ORANGE}],3)})),h=Array(9).fill(0).map(((t,e)=>{const s=e%3,c=Math.floor(e/3),l={x:a+n,y:c*(o+n),z:a-n-s*(o+n)};return x["2d"].Quadrilateral([{position:i,verticesPositions:[[l.x,l.y,l.z],[l.x,l.y,l.z-o],[l.x,l.y+o,l.z-o],[l.x,l.y+o,l.z]],rotation:r,color:u.GREEN}],3)}));[Array(9).fill(0).map(((t,e)=>{const s=e%3,c=Math.floor(e/3),l={z:a-n-s*(o+n),y:-10,x:c*(o+n)+n};return x["2d"].Quadrilateral([{position:i,verticesPositions:[[l.x,l.y,l.z],[l.x,l.y,l.z-o],[l.x+o,l.y,l.z-o],[l.x+o,l.y,l.z]],rotation:r,color:u.WHITE}],3)})),l,c,h,Array(9).fill(0).map(((t,e)=>{const s=e%3,c={x:Math.floor(e/3)*(o+n)+n,y:a-n,z:a-n-s*(o+n)};return x["2d"].Quadrilateral([{position:i,verticesPositions:[[c.x,c.y,c.z],[c.x,c.y,c.z-o],[c.x+o,c.y,c.z-o],[c.x+o,c.y,c.z]],rotation:r,color:u.YELLOW}],3)})),Array(9).fill(0).map(((t,e)=>{const s=e%3,c=Math.floor(e/3),l={z:a,y:c*(o+n),x:a-n-s*(o+n)+n};return x["2d"].Quadrilateral([{position:i,verticesPositions:[[l.x,l.y,l.z],[l.x-o,l.y,l.z],[l.x-o,l.y+o,l.z],[l.x,l.y+o,l.z]],rotation:r,color:u.BLUE}],3)}))].map((o=>{x.render(t,o,s.vertexShader,s.fragmentShader,e)}))}(n,l,d.pixelSize,h,v)),z=requestAnimationFrame(f)};requestAnimationFrame(f)}))})();